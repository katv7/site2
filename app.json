[{"name": "app.py", "content": "# from shiny import App, render, ui\n# import numpy as np\n# from matplotlib import pyplot as plt\n\n# app_ui = ui.page_fluid(\n#     ui.input_slider(\"n\", \"N\", 0, 20, 1),\n#     ui.input_checkbox(\"check\",\"2 or 4\"),\n#     ui.output_text_verbatim(\"txt\"),\n#     ui.output_plot(\"plots\")\n# )\n\n\n# def server(input, output, session):\n#     @output\n#     @render.text\n#     def txt():\n#         y = np.array([1,5,7])\n#         if input.check():\n#             x = 2\n#         else:\n#             x=4\n           \n        \n#         return f\"n*{x} is {input.n() * x} and {y}\"\n    \n#     @output\n#     @render.plot\n#     def plots():\n#         random_normal = np.random.normal(0, 5, 1000)\n#         fig = plt.figure(figsize =(5, 3))\n \n#         plt.hist(random_normal, bins = input.n())\n \n#         plt.title(\"Numpy Histogram\")\n\n\n\n\n\n# app = App(app_ui, server)\n\nfrom shiny import App, render, ui,reactive\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom shinywidgets import output_widget, register_widget, render_widget\nimport altair as alt\nimport pandas as pd\nfrom vega_datasets import data\ncars = data.cars()\n# print(list(cars.columns))\nx = list(cars.columns)\napp_ui = ui.page_fluid(\n   \n    ui.input_select('colums','Select Variable',choices=x),\n    ui.input_select('colums2','Select Variable2',choices=x),\n    ui.input_checkbox(\"check\",\"2 or 5\"),\n    # ui.output_ui(\"txt\"),\n    output_widget(\"plots\")\n)\n\n\ndef server(input, output, session):\n    # @output\n    # @render.text\n    @reactive.Calc\n    def txt():\n        y = np.array([1,5,7])\n        if input.check():\n            x = 2\n        else:\n            x=5\n           \n        \n        return f'{x}'\n    \n    @output\n    @render_widget\n    @reactive.Calc\n    def plots():\n        x = [1, 2, 3, 4, 5]\n        y = [6, 7, 2, 4, int(txt())]\n        alt.renderers.enable('default')\n        df = pd.DataFrame({\"x\":x,\"y\":y})\n        p= alt.Chart(cars).mark_point().encode(\n            x=input.colums(),\n            y=input.colums2()).properties(\n                title='A Scatter Chart'\n            )\n        \n        return p\n\napp = App(app_ui, server)", "type": "text"}]